pipeline{
    tools {
        nodejs '16.15.0'
    }
    agent{
        label "label1"
    }
    stages{
        stage("Scan with sonarqube"){
            steps{
                echo "========executing sonarqube========"

                withSonarQubeEnv(installationName: 'node-sq', credentialsId: 'jenkins-sonar') {
                    withCredentials([string(credentialsId: 'sonar-token', variable: 'sonar-token')]) {
                        sh """
                            sonar-scanner --version
                            sonar-scanner \
                                -Dsonar.projectKey=node-project \
                                -Dsonar.sources=. \
                                -Dsonar.host.url=http://localhost:9000 \
                                -Dsonar.login=${sonar-token}
                            """
                    }
                    
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}